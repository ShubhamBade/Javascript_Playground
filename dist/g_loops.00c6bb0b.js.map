{"version":3,"sources":["topics/g_loops.js"],"names":["i","console","log","str","length","obj","company","field","key","data","str2","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","err","e","f","num"],"mappings":";;;AAAA;AACA;AACA;;AAEA;AACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;EAC1BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,CAAC,CAAC;AACxC;AACA,IAAMG,GAAG,GAAG,SAAS;AACrB,KAAK,IAAIH,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGG,GAAG,CAACC,MAAM,EAAEJ,EAAC,EAAE,EAAE;EACnCC,OAAO,CAACC,GAAG,CAACC,GAAG,CAACH,EAAC,CAAC,CAAC;AACrB;;AAEA;AACA,IAAMK,GAAG,GAAG;EAAEC,OAAO,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC;AAChD,KAAK,IAAIC,GAAG,IAAIH,GAAG,EAAE;EACnBJ,OAAO,CAACC,GAAG,CAACM,GAAG,EAAEH,GAAG,CAACG,GAAG,CAAC,CAAC;AAC5B;;AAEA;AACA;AACA,IAAMC,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;AAC9B,KAAK,IAAID,IAAG,IAAIC,IAAI,EAAE;EACpBR,OAAO,CAACC,GAAG,CAACM,IAAG,EAAEC,IAAI,CAACD,IAAG,CAAC,CAAC,CAAC,CAAC;AAC/B;;AAEA;AACA,IAAME,IAAI,GAAG,cAAc;AAAC,IAAAC,SAAA,GAAAC,0BAAA,CACVF,IAAI;EAAAG,KAAA;AAAA;EAAtB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAwB;IAAA,IAAfC,KAAK,GAAAJ,KAAA,CAAAI,KAAA;IACZhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAAC,CAAC,CAAC;EACtB;;EAEA;AAAA,SAAAC,GAAA;EAAAP,SAAA,CAAAQ,CAAA,CAAAD,GAAA;AAAA;EAAAP,SAAA,CAAAS,CAAA;AAAA;AACA,IAAIC,GAAG,GAAG,EAAE;AACZ,OAAOA,GAAG,IAAI,EAAE,EAAE;EAChBpB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvBmB,GAAG,EAAE;AACP;;AAEA;AACA,GAAG;EACDpB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAChCmB,GAAG,EAAE;AACP,CAAC,QAAQA,GAAG,GAAG,EAAE;;AAEjB;;AAEA,KAAK,IAAIrB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,EAAE,EAAEA,GAAC,EAAE,EAAE;EAC3B,IAAIA,GAAC,IAAI,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB;EACF;EACA,IAAIF,GAAC,IAAI,CAAC,EAAE;IACV;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;EAChC;AACF","file":"g_loops.00c6bb0b.js","sourceRoot":"..\\src","sourcesContent":["// for - loops through a block of code a number of times\r\n// for/in - loops through the properties of an object\r\n// for/of - loops through the values of an iterable object\r\n\r\n//for loop\r\nfor (let i = 0; i < 5; i++) {\r\n  console.log(\"For Loop Iteration :\", i);\r\n}\r\nconst str = \"Welcome\";\r\nfor (let i = 0; i < str.length; i++) {\r\n  console.log(str[i]);\r\n}\r\n\r\n//for/in loop - obj\r\nconst obj = { company: \"SBPVT\", field: \"IT/SD\" };\r\nfor (let key in obj) {\r\n  console.log(key, obj[key]);\r\n}\r\n\r\n// we can iterate over array as well\r\n//Do not use for in over an Array if the index order is important.- use forEach(()=>{})\r\nconst data = [10, 20, 45, 800];\r\nfor (let key in data) {\r\n  console.log(key, data[key]); // have access to the index here\r\n}\r\n\r\n//for/of loop- loop over iterable string, array, map,set etc\r\nconst str2 = \"React Native\";\r\nfor (let value of str2) {\r\n  console.log(value); // do not have access to the index here\r\n}\r\n\r\n// while loop - excute block of code as long as condition get true\r\nlet num = 10;\r\nwhile (num <= 10) {\r\n  console.log(\"Executed\");\r\n  num++;\r\n}\r\n\r\n// do while loop- this loop excute atleast one time whether true /false\r\ndo {\r\n  console.log(\"Executed one time\");\r\n  num++;\r\n} while (num < 10);\r\n\r\n// break and continue\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  if (i == 5) {\r\n    console.log(\"Break at 5\");\r\n    break;\r\n  }\r\n  if (i == 3) {\r\n    continue;\r\n    console.log(\"Continue at 3\"); // wont excute\r\n  }\r\n}\r\n"]}